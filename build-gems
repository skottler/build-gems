#!/bin/bash

GEM_PREFIX="${GEM_PREFIX-/usr/lib/ruby/gems/1.8}"
GEM_BIN_PATH="${GEM_BIN_PATH-/usr/bin}"

if [ "$1"x != "x" ]; then
  TARGET="$1";
else
  TARGET="${TARGET-gem-list}"
fi

if [ ! -f $TARGET ]; then
  echo "The specified file with targets does not exist: '$TARGET'";
  exit 1;
fi

count=`cat $TARGET| grep -v '^#' | wc -l`
cl=`echo $count | wc -c`
i=0;
[ -f failed.txt ] && rm failed.txt
[ -d BUILD ] || mkdir -p BUILD

while read gem
do
  let 'i++';
  echo $gem | grep -q ':' || gem="${gem}:"
  prefix="`printf "[%${cl}d/%d]" $i $count`";
  echo "$prefix Parsing line '${gem}'";
	basename=`echo $gem   | cut -d':' -f 1 `
	version=`echo $gem    | cut -d':' -f 2 `
  extra_args=`echo $gem | cut -d':' -f 3- `
	cd BUILD
	if [ x$version == 'x' ]; then
		echo "$prefix Building latest $basename"
  elif [ $version == 'pre' ]; then
    echo "$prefix Getting latest prerelease $basename"
    gemfile="`gem fetch --pre $basename | grep Downloaded`";
    RETVAL=$?
    version=`echo $gemfile | sed -e "s/Downloaded ${basename}-//"`;
    basename="./${basename}-${version}.gem"
	else
		echo "$prefix Building $basename version $version"
    extra_args="-v $version $extra_args"
	fi
  extra_args="--gem-bin-path $GEM_BIN_PATH --prefix $GEM_PREFIX $extra_args"
  extra_args="-d 'ruby(rubygems)' -d 'ruby(abi) = 1.8'  $extra_args"
  if [[ x$RETVAL == 'x' || $RETVAL == 0 ]]; then
    eval fpm -t rpm -s gem -a noarch $extra_args $basename
    eval fpm -t deb -s gem -a noarch $extra_args $basename
:X
  fi;

	echo "$prefix Build of $basename returned with $RETVAL"
	if [  $RETVAL -ne 0 ]; then
    echo $gem >> ../failed.txt
  fi
	cd ../
done < <(cat $TARGET| grep -v '^#' | grep -v '^$' )

if [ -d artifacts ]
then
    rm -rf artifacts
fi
mkdir artifacts
mv BUILD/*.rpm artifacts
rm -rf BUILD

if [ -f failed.txt ]; then
  errcount=`cat failed.txt | wc -l`
  if [ $errcount -gt 0 ]; then
    exit 1;
  fi;
fi;
